# -*- coding: utf-8 -*-
"""DF Pyanalytics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EDm3AKRtCGlYLUU0-Oa7iGnirYWKUXzJ

DataSet
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import statsmodels as sm

!unzip /content/globalyoutubestatistics2023.zip

df = pd.read_csv('/content/Global YouTube Statistics.csv', encoding='latin1')

df

#considerando a ideia de que canais que foram criados antes de 2015 sejam canais antigos do youtube e canais que foram criados deste momento para cá
#sejam considerados recentes...
df['isAntigoouRecente'] = np.where(df['created_year']<2015, 'Antigo', 'Recente')

df

#contar quantas linhas tem para depois ver se tem duplicadas
df.count()

df.columns = df.columns.str.lower()

df.head(10)

df.dtypes

df['country'].value_counts()

df['category'].value_counts()

df[(df['subscribers']>5000000) & (df['country'] == 'Brazil')]

#contar quantas linhas tem para depois ver se tem duplicadas
df.count()

df.drop_duplicates(subset=['youtuber'], keep= 'first', inplace=True)

#quero ver as coisas que são nulas nesse dataframe
df.isnull()

#agora quero os nulos mas vindo com o nome bonitinho e separado, pq antes tava tudo falso
df.isnull().sum()

#o que for nulo no topico dos inscritos dos ultimos 30 dias será em vez de tirado, colocado como ZERO
df['subscribers_for_last_30_days'] = df['subscribers_for_last_30_days'].fillna('ZERO')

# Exibir as primeiras linhas do DataFrame para verificar os dados
print(df.head())

df2 = df[['youtuber', 'country', 'uploads', 'isantigoourecente', 'subscribers_for_last_30_days', 'category']]

df2

df['subscribers_for_last_30_days']

#substituindo o zero por "0"
df.loc[df['subscribers_for_last_30_days'] == 'ZERO', 'subscribers_for_last_30_days'] = 0

#fazer o grafico
fig, ax = plt.subplots()

ax.hist(df['subscribers_for_last_30_days'])
plt.show()

df3 = df2.groupby('isantigoourecente')['youtuber'].count()
print(df3)

fig, ax=plt.subplots()
ax.pie(df3, radius=4, center=(4, 4),
wedgeprops={"linewidth": 1, "edgecolor": "white"}, frame=True)

ax.set(xlim=(0, 8), xticks=np.arange(1, 8),
ylim=(0, 8), yticks=np.arange(1, 8))

plt.show()

df2

geral_brasil = df2[(df2['country'] == 'Brazil')]

geral_brasil

canais_de_musica_BR = geral_brasil[(geral_brasil['category'] == 'Music')]

canais_de_musica_BR

#Em que tipo de conteúdo os países ou regiões mais focam??
df2['country'].value_counts()

cat_US = df2[(df2['country'] == 'United States')]
print(cat_US)

catg_US = cat_US.groupby('category')['youtuber'].count()

"""A proporção parece estar errada, pq tinha uma categoria com Entertainment            68
e
People & Blogs           38
como a segunda maior
"""

sns.countplot(cat_US, y='category')

#depois fazer a soma das categorias com o numero de visualizações para ver qual a cateogria mais assistida, somando as duas com algum comando
plt.hist(catg_US, bins=20, edgecolor='black')

#adicionar titulos
plt.xlabel('category')

plt.title('Histograma das categorias USA')

plt.show()

import plotly.express as px

fig = px.scatter(cat_US, x='uploads', y= 'subscribers_for_last_30_days')

#botando o tutulo e os eixos
fig.update_layout(title = 'Gráfico de relação entre uploads e taxa de inscritos por canal')
fig.update_yaxes(title = 'Incritos no último mês')

#mostrar
fig.show()

"""## Fazer agora relacionado ao Brasil

"""

cat_India = df2[(df2['country'] == 'India')]
print(cat_India)

#Histograma
sns.countplot(cat_India, y='category')

catg_India = cat_India.groupby('category')['youtuber'].count()

#depois fazer a soma das categorias com o numero de visualizações para ver qual a cateogria mais assistida, somando as duas com algum comando
plt.hist(catg_India, bins=20, edgecolor='black')

#adicionar titulos
plt.xlabel('category')

plt.title('Histograma das categorias USA')

plt.show()

import plotly.express as px

fig = px.scatter(cat_US, x='uploads', y= 'subscribers_for_last_30_days')

#botando o tutulo e os eixos
fig.update_layout(title = 'Gráfico de relação entre uploads e taxa de inscritos por canal')
fig.update_yaxes(title = 'Incritos no último mês')

#mostrar
fig.show()

"""Agora"""

cat_UK = df2[(df2['country'] == 'India')]
print(cat_UK)

sns.countplot(cat_UK, y='category')

catg_UK = cat_UK.groupby('category')['youtuber'].count()

#depois fazer a soma das categorias com o numero de visualizações para ver qual a cateogria mais assistida, somando as duas com algum comando
plt.hist(catg_UK, bins=20, edgecolor='black')

#adicionar titulos
plt.xlabel('category')

plt.title('Histograma das categorias USA')

plt.show()

cat_Mexico = df2[(df2['country'] == 'Mexico')]
print(cat_Mexico)

sns.countplot(cat_Mexico, y='category')

cat_Indonesia = df2[(df2['country'] == 'Indonesia')]
print(cat_Indonesia)

sns.countplot(cat_Indonesia, y='category')

cat_Espanha = df2[(df2['country'] == 'Spain')]
print(cat_Espanha)

sns.countplot(cat_Espanha, y='category')

cat_Thailandia = df2[(df2['country'] == 'Thailand')]
print(cat_Thailandia)

sns.countplot(cat_Thailandia, y='category')

cat_SK = df2[(df2['country'] == 'South Korea')]
print(cat_SK)

sns.countplot(cat_SK, y='category')

cat_Russia = df2[(df2['country'] == 'Russia')]
print(cat_Russia)

sns.countplot(cat_Russia, y='category')

cat_Canada = df2[(df2['country'] == 'Canada')]
print(cat_Canada)

sns.countplot(cat_Canada, y='category')

cat_Arg = df2[(df2['country'] == 'Argentina')]
print(cat_Arg)

sns.countplot(cat_Arg, y='category')

cat_Phil = df2[(df2['country'] == 'Philippines')]
print(cat_Phil)

sns.countplot(cat_Phil, y='category')

cat_Colombia = df2[(df2['country'] == 'Colombia')]
print(cat_Colombia)

sns.countplot(cat_Colombia, y='category')

cat_Australia = df2[(df2['country'] == 'Australia')]
print(cat_Australia)

sns.countplot(cat_Australia, y='category')

cat_Arabia_Saudita = df2[(df2['country'] == 'Saudi Arabia')]
print(cat_Arabia_Saudita)

sns.countplot(cat_Arabia_Saudita, y='category')

cat_Ukrania = df2[(df2['country'] == 'Ukraine')]
print(cat_Ukrania)

sns.countplot(cat_Ukrania, y='category')

cat_UAE = df2[(df2['country'] == 'United Arab Emirates')]
print(cat_UAE)

sns.countplot(cat_UAE, y='category')

cat_Alemanha = df2[(df2['country'] == 'Germany')]
print(cat_Alemanha)

sns.countplot(cat_Alemanha, y='category')

cat_Pakistan = df2[(df2['country'] == 'Pakistan')]
print(cat_Pakistan)

sns.countplot(cat_Pakistan, y='category')

cat_France = df2[(df2['country'] == 'France')]
print(cat_France)

sns.countplot(cat_France, y='category')

cat_Japao = df2[(df2['country'] == 'Japan')]
print(cat_Japao)

#Agora do Japão
sns.countplot(cat_Japao, y='category')

catg_Japan = cat_Japao.groupby('category')['youtuber'].count()

plt.hist(catg_Japan, bins=20, edgecolor='black')

#adicionar titulos
plt.xlabel('category')

plt.title('Histograma das categorias USA')

plt.show()

df[ (df['country'] == 'Japan')]
#pewdiepie é da Suécia mas como o canal tem relação com o Japão ele está listado como de lá

cat_Tuqruia = df2[(df2['country'] == 'Turkey')]
print(cat_Tuqruia)

sns.countplot(cat_Tuqruia, y='category')

cat_Suiça = df2[(df2['country'] == 'Sweden')]
print(cat_Indonesia)

sns.countplot(cat_Suiça, y='category')

cat_Vietnam = df2[(df2['country'] == 'Vietnam')]
print(cat_Vietnam)

sns.countplot(cat_Vietnam, y='category')

cat_Jordania = df2[(df2['country'] == 'Jordan')]
print(cat_Jordania)

sns.countplot(cat_Jordania, y='category')

cat_PB = df2[(df2['country'] == 'Netherlands')]
print(cat_PB)

sns.countplot(cat_PB, y='category')

cat_Singapura = df2[(df2['country'] == 'Singapore')]
print(cat_Singapura)

sns.countplot(cat_Singapura, y='category')

cat_Suiça = df2[(df2['country'] == 'Sweden')]
print(cat_Indonesia)

sns.countplot(cat_Suiça, y='category')